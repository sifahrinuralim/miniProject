{"version":3,"sources":["Radio.tsx"],"names":["Radio","ref","icon","wrapperRef","size","props","contextState","React","useContext","RadioContext","_interactionBox","_iterationBoxPressed","_pressed","_radio","_radioChecked","_checked","_radioDisabled","_disabled","_radioInvalid","_invalid","_icon","isInvalid","themedProps","inputRef","useRef","state","inputProps","disabled","checked","sizedIcon","cloneElement","isPressed","children"],"mappings":"wbAAA,qDACA,uCACA,+CACA,mDACA,2DAEA,gDACA,wCACA,qCACA,oC,qHAEA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoDC,GAApD,CAAiE,IAA9DC,CAAAA,IAA8D,MAA9DA,IAA8D,CAAxDC,UAAwD,MAAxDA,UAAwD,CAA5CC,IAA4C,MAA5CA,IAA4C,CAAnCC,KAAmC,0EAC7E,GAAMC,CAAAA,YAAY,CAAGC,eAAMC,UAAN,CAAiBC,wBAAjB,CAArB,CAD6E,wBAazE,sCAAmB,OAAnB,0BACCH,YADD,CAECD,KAFD,EAGFD,IAAI,CAAJA,IAHE,GAbyE,2CAG3EM,eAH2E,CAG9CC,oBAH8C,uBAGxDC,QAHwD,CAGrBF,eAHqB,sHAI3EG,MAJ2E,CAK/DC,aAL+D,wBAKzEC,QALyE,CAM9DC,cAN8D,wBAMzEC,SANyE,CAO/DC,aAP+D,wBAOzEC,QAPyE,CAQtEN,MARsE,mGAU3EO,KAV2E,qBAU3EA,KAV2E,CAW3EC,SAX2E,qBAW3EA,SAX2E,CAYxEC,WAZwE,6GAmB7E,GAAMC,CAAAA,QAAQ,CAAGhB,eAAMiB,MAAN,CAAa,IAAb,CAAjB,CAnB6E,cAoBtD,qBAASnB,KAAT,CAAgBC,YAAY,CAACmB,KAA7B,CAAoCF,QAApC,CApBsD,CAoBrEG,UApBqE,WAoBrEA,UApBqE,IAqBrEC,CAAAA,QArBqE,CAqB/CD,UArB+C,CAqBrEC,QArBqE,CAqB3DC,OArB2D,CAqB/CF,UArB+C,CAqB3DE,OArB2D,CAwB7E,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAEhBtB,gBAAMuB,YAAN,CAAmB5B,IAAnB,0BACKkB,KADL,EAFgB,EAAlB,CAMA,MACE,8BAAC,oBAAD,0BACOM,UADP,EAEE,GAAG,CAAE,qBAAU,CAACzB,GAAD,CAAME,UAAN,CAAV,CAFP,CAGE,iBAAiB,CAAC,OAHpB,8EAKG,eAAwB,IAArB4B,CAAAA,SAAqB,OAArBA,SAAqB,CACvB,MACE,8BAAC,cAAD,wBACE,aAAa,CAAC,KADhB,CAEE,cAAc,CAAC,SAFjB,CAGE,UAAU,CAAC,QAHb,CAIE,YAAY,CAAC,MAJf,EAKMT,WALN,gFAOE,6BAAC,cAAD,+EAEE,6BAAC,YAAD,0BACMZ,eADN,CAEOqB,SAAS,EAAIpB,oBAFpB,EAGE,CAAC,CAAE,CAHL,CAIE,CAAC,CAAC,MAJJ,CAKE,MAAM,CAAC,MALT,+EAFF,CAUE,6BAAC,cAAD,0BACME,MADN,CAEOe,OAAO,EAAId,aAFlB,CAGOa,QAAQ,EAAIX,cAHnB,CAIOK,SAAS,EAAIH,aAJpB,gFAMGhB,IAAI,EAAI2B,SAAR,EAAqBD,OAArB,CACCC,SAAS,EADV,CAGC,6BAAC,iBAAD,0BAAgBT,KAAhB,EAAuB,OAAO,CAAEQ,OAAO,CAAG,CAAH,CAAO,CAA9C,+EATJ,CAVF,CAPF,CA+BGvB,KAAK,CAAC2B,QA/BT,CADF,CAmCD,CAzCH,CADF,CA6CD,CA3ED,C,aA6Ee,gBAAK,sBAAWhC,KAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable, IPressableProps } from '../Pressable';\nimport { Center } from '../../composites/Center';\nimport Box from '../Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IRadioProps } from './types';\nimport { useRadio } from '@react-native-aria/radio';\nimport { RadioContext } from './RadioGroup';\nimport { mergeRefs } from '../../../utils';\nimport { CircleIcon } from '../Icon/Icons';\n\nconst Radio = ({ icon, wrapperRef, size, ...props }: IRadioProps, ref: any) => {\n  const contextState = React.useContext(RadioContext);\n  const {\n    _interactionBox: { _pressed: _iterationBoxPressed, ..._interactionBox },\n    _radio: {\n      _checked: _radioChecked,\n      _disabled: _radioDisabled,\n      _invalid: _radioInvalid,\n      ..._radio\n    },\n    _icon,\n    isInvalid,\n    ...themedProps\n  } = usePropsResolution('Radio', {\n    ...contextState,\n    ...props,\n    size,\n  });\n\n  const inputRef = React.useRef(null);\n  const { inputProps } = useRadio(props, contextState.state, inputRef);\n  const { disabled, checked } = inputProps;\n\n  // only calling below function when icon exist.\n  const sizedIcon = () =>\n    //@ts-ignore\n    React.cloneElement(icon, {\n      ..._icon,\n    });\n\n  return (\n    <Pressable\n      {...(inputProps as IPressableProps)}\n      ref={mergeRefs([ref, wrapperRef])}\n      accessibilityRole=\"radio\"\n    >\n      {({ isPressed }: any) => {\n        return (\n          <Center\n            flexDirection=\"row\"\n            justifyContent=\"center \"\n            alignItems=\"center\"\n            borderRadius=\"full\"\n            {...themedProps}\n          >\n            <Center>\n              {/* Interaction Wrapper */}\n              <Box\n                {..._interactionBox}\n                {...(isPressed && _iterationBoxPressed)}\n                p={5}\n                w=\"100%\"\n                height=\"100%\"\n              />\n              {/* radio */}\n              <Center\n                {..._radio}\n                {...(checked && _radioChecked)}\n                {...(disabled && _radioDisabled)}\n                {...(isInvalid && _radioInvalid)}\n              >\n                {icon && sizedIcon && checked ? (\n                  sizedIcon()\n                ) : (\n                  <CircleIcon {..._icon} opacity={checked ? 1 : 0} />\n                )}\n              </Center>\n            </Center>\n            {/* Label */}\n            {props.children}\n          </Center>\n        );\n      }}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]}